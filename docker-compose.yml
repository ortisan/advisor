version: '3'

services:

  redis:
    image: 'redis:5.0.5'
    restart: always
    ports:
      - "6379:6379"

  postgres:
    image: 'postgres:11.2-alpine'
    restart: always
    environment:
      - POSTGRES_PASSWORD=123456
    volumes:
      - /var/data/advisor/postgres:/var/lib/postgresql/data
    #      - ./db-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - '5444:5432'

#  nginx:
#    build:
#      dockerfile: Dockerfile
#      context: nginx
#    restart: always
#    ports:
#      - '3051:80'

  config-server:
    build:
      context: advisor-config-server
      dockerfile: Dockerfile
    restart: always
    ports:
      - '8888:8888'
    volumes:
      - maven-repo:/root/.m2
    depends_on:
      - redis
    command: ["./wait-for-it.sh", "redis:6379", "--", "mvn", "spring-boot:run"]

  discovery-server:
    build:
      context: advisor-discovery-server
      dockerfile: Dockerfile
    restart: always
    ports:
      - '9777:9777'
    volumes:
      - maven-repo:/root/.m2
    depends_on:
      - config-server
    command: ["./wait-for-it.sh", "config-server:8888", "--", "mvn", "spring-boot:run"]

  advisor:
    build:
      context: advisor-service
      dockerfile: Dockerfile
    ports:
      - '9888:9888'
    volumes:
      - maven-repo:/root/.m2
    depends_on:
      - redis
      - config-server
      - discovery-server
    command: ["./wait-for-it.sh", "discovery-server:9777", "--", "mvn", "clean", "compile", "spring-boot:run"]

#  advisor-auth:
#      build:
#        context: advisor-service
#        dockerfile: Dockerfile
#      ports:
#        - '9666:9666'
#      volumes:
#        - maven-repo:/root/.m2
#      depends_on:
#        - config-server
#        - discovery-server
#      command: ["./wait-for-it.sh", "discovery-server:9777", "--", "mvn", "clean", "compile", "spring-boot:run"]

#  frontend:
#    build:
#      context: advisor-frontend
#      dockerfile: Dockerfile
#    ports:
#      - '4200:4200'

volumes:
  maven-repo: